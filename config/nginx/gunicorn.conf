# https://docs.gunicorn.org/en/stable/deploy.html#nginx-configuration
upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    # for UNIX domain socket setups
    server unix:/run/gunicorn.sock fail_timeout=0;
}

server {
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#listen
    listen 80 deferred;
    client_max_body_size 4G;
    server_name sort-web-app.shef.ac.uk www.sort-web-app.shef.ac.uk;
    keepalive_timeout 5;

    # /server-status endpoint
    # This is used by IT Services to monitor servers using collectd
    # https://nginx.org/en/docs/http/ngx_http_stub_status_module.html
    # https://www.collectd.org/documentation/manpages/collectd.conf.html
    # It's based on Apache mod_status https://httpd.apache.org/docs/2.4/mod/mod_status.html
    location = /server-status {
        stub_status;
    }

    # Serve static files without invoking Python WSGI
    location /static/ {
        # https://nginx.org/en/docs/http/ngx_http_core_module.html#root
        root /var/www/sort;
    }

    # Proxy forward to the WSGI Python app
    location / {
        # Set HTTP headers for the proxied service
        # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://app_server;
    }
}
